server.port=5000

# disable all management enpoints except health
endpoints.enabled = false
endpoints.health.enabled = true
management.health.defaults.enabled=false

camel.health.enabled=false
camel.health.indicator.enabled=true

camel.component.servlet.mapping.context-path=/api/*

camel.cloud.service-call.component=undertow

spring.datasource.url=jdbc:oracle:thin:@//exa02-scan-cassi.cassi.com.br:1521/CORDSNBD001
#spring.datasource.url=jdbc:oracle:thin:@//127.0.0.1:1521/xe
spring.datasource.username=cdss
spring.datasource.password=cdss2018
# hikariCP settings
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.maximum-pool-size=50
# keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.datasource.driver.class=oracle.jdbc.driver.OracleDriver

# =============================================
# oracle configurations - jpa/hibernate
# ---------------------------------------------
spring.jpa.show-sql=true
# naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# hibernate config
# allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
# drops existing tables, recreates them and executes import.sql
# Hibernate ddl auto (create, create-drop, update, validate): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=none